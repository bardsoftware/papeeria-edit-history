import java.text.SimpleDateFormat

buildscript {
    ext.kotlin_version = '1.3.+'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            name "papeeria-maven"
            url "gcs://papeeria-maven-repo/maven2"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.+'
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '1.2.0'
    id "org.jetbrains.kotlin.jvm" version "1.3.31"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    libprotoImplementation
}

dependencies {
    libprotoImplementation 'com.google.protobuf:protobuf-java:latest.release'
    libprotoImplementation 'io.grpc:grpc-protobuf:latest.release'
    libprotoImplementation 'io.grpc:grpc-stub:latest.release'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.grpc:grpc-netty:latest.release"
    compile "io.prometheus:simpleclient_common:latest.release"
    compile "io.prometheus:simpleclient:latest.release"
    compile "io.prometheus:simpleclient_hotspot:latest.release"
    compile "io.prometheus:simpleclient_httpserver:latest.release"
    compile "com.xenomachina:kotlin-argparser:latest.release"
    compile 'com.google.cloud:google-cloud-storage:latest.release'
    compile 'com.google.cloud:google-cloud-datastore:latest.release'
    compile 'com.google.cloud:google-cloud-nio:latest.release'
    compile 'com.google.guava:guava:latest.release'
    compile 'ch.qos.logback:logback-classic:latest.release'
    compile 'ch.qos.logback:logback-core:latest.release'
    compile group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: '2.0.+'
    compile configurations.libprotoImplementation

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.+'
    testCompile "io.grpc:grpc-testing:latest.release"
    testCompile configurations.libprotoImplementation
}

dependencyLocking {
    lockAllConfigurations()
}

sourceSets {
    main {
        proto {
        }
        java {
            srcDirs "$projectDir/src/generated/main/java", "$projectDir/src/generated/main/grpc"
        }
    }
    libproto {
        java {
            srcDirs "$projectDir/src/generated/main/java", "$projectDir/src/generated/main/grpc"
        }
    }
}

sourceCompatibility = 1.8

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.+'
        generatedFilesBaseDir = "$projectDir/src/generated"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.+'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

task libproto(type: Jar) {
    dependsOn = ["compileLibprotoJava"]
    from sourceSets.libproto.output.classesDirs
    include "com/bardsoftware/**"
    archiveName = "cosmas-proto-${version}.jar"
}

mainClassName = 'com.bardsoftware.papeeria.backend.cosmas.CosmasServerKt'

test {
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

jib {
    from {
        image = 'gcr.io/distroless/java:debug'
    }
    extraDirectory {
        permissions = [
                '/var/log/cosmas': '777',
                '/var/log/cosmas/cosmas.log': '666'
        ]
    }
}

group 'com.bardsoftware.papeeria.backend'
version new SimpleDateFormat("yyyy.MM.dd").format(new Date())

publishing {
    repositories {
        maven {
            name "papeeria-maven"
            url "gcs://papeeria-maven-repo/maven2"
        }

    }
    publications {
        mavenCosmasProto(MavenPublication) {
            artifactId = 'cosmas-proto'
            artifact libproto
            version project.version
        }
    }
}
