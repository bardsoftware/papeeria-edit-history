/**
Copyright 2018 BarD Software s.r.o

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

option java_package = "com.bardsoftware.papeeria.backend.cosmas";
option java_outer_classname = "CosmasProto";


message ProjectInfo {
    string projectId = 1;
    string ownerId = 2;
    bool isFreePlan = 3;
}

message FileVersionInfo {
    int64 generation = 1;
    int64 timestamp = 2;
    string fileId = 3;
}

message FileInfo {
    string projectId = 1;
    string fileId = 2;
}

message FileTomb {
    string fileId = 1;
    string fileName = 2;
    int64 removalTimestamp = 3;
}

message FileCemetery {
    repeated FileTomb cemetery = 1;
}

message FileVersion {
    repeated Patch patches = 1;
    bytes content = 2;
    int64 timestamp = 3;
}

message Patch {
    string userId = 1;
    string userName = 2;
    string text = 3;
    int64 timestamp = 4;
    string actualHash = 5;
}

message ChangeId {
    string oldFileId = 1;
    string newFileId = 2;
}

message FileIdVersionsInfo {
    repeated FileVersionInfo versionInfo = 1;
}

message FileIdMap {
    map<string, string> prevIds = 1;
}

message GetVersionRequest {
    ProjectInfo info = 1;
    string fileId = 2;
    int64 generation = 3; // if generation is -1, Cosmas will return the latest version of file
}

message GetVersionResponse {
    FileVersion file = 1;
}


message CreatePatchRequest {
    ProjectInfo info = 1;
    string fileId = 2;
    repeated Patch patches = 3;
}

message CreatePatchResponse {
}

message FileVersionListRequest {
    ProjectInfo info = 1;
    string fileId = 2;
}


message FileVersionListResponse {
    repeated FileVersionInfo versions = 1;
}

message CommitVersionRequest {
    ProjectInfo info = 1;
}

message CommitVersionResponse {
    repeated FileInfo badFiles = 1;
}

message DeletePatchRequest {
    ProjectInfo info = 1;
    string fileId = 2;
    int64 generation = 3;
    int64 patchTimestamp = 4;
}

message DeletePatchResponse {
    bytes content = 1;
}

message DeleteFileRequest {
    ProjectInfo info = 1;
    string fileId = 2;
    string fileName = 3;
    int64 removalTimestamp = 4;
}


message DeleteFileResponse {
}

message DeletedFileListRequest {
    ProjectInfo info = 1;
}

message DeletedFileListResponse {
    repeated FileTomb files = 1;
}

message ForcedFileCommitRequest {
    ProjectInfo info = 1;
    string fileId = 2;
    int64 timestamp = 3;
    bytes actualContent = 4;
}

message ForcedFileCommitResponse {
}

message RestoreDeletedFileRequest {
    ProjectInfo info = 1;
    string fileId = 2;
}

message RestoreDeletedFileResponse {
}

message ChangeFileIdRequest {
    ProjectInfo info = 1;
    repeated ChangeId changes = 2;
}

message ChangeFileIdResponse {
}

message ChangeUserPlanRequest {
    string userId = 1;
    bool isFreePlanNow = 2; // plan AFTER changing
}

message ChangeUserPlanResponse {

}

service Cosmas {
    rpc GetVersion (GetVersionRequest) returns (GetVersionResponse) {
    }
    rpc CreatePatch (CreatePatchRequest) returns (CreatePatchResponse) {
    }
    rpc FileVersionList (FileVersionListRequest) returns (FileVersionListResponse) {
    }
    rpc CommitVersion (CommitVersionRequest) returns (CommitVersionResponse) {
    }
    rpc DeletePatch (DeletePatchRequest) returns (DeletePatchResponse) {
    }
    rpc DeleteFile (DeleteFileRequest) returns (DeleteFileResponse) {
    }
    rpc DeletedFileList (DeletedFileListRequest) returns (DeletedFileListResponse) {
    }
    rpc ForcedFileCommit (ForcedFileCommitRequest) returns (ForcedFileCommitResponse) {
    }
    rpc RestoreDeletedFile (RestoreDeletedFileRequest) returns (RestoreDeletedFileResponse) {
    }
    rpc ChangeFileId (ChangeFileIdRequest) returns (ChangeFileIdResponse) {
    }
    rpc ChangeUserPlan (ChangeUserPlanRequest) returns (ChangeUserPlanResponse) {
    }
}
