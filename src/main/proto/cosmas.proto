/**
Copyright 2018 BarD Software s.r.o

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

option java_package = "com.bardsoftware.papeeria.backend.cosmas";
option java_outer_classname = "CosmasProto";

message FileVersionInfo {
    int64 generation = 1;
    int64 timestamp = 2;
}

message FileInfo {
    string projectId = 1;
    string fileId = 2;
}

message FileTomb {
    string fileId = 1;
    string fileName = 2;
    int64 removalTimestamp = 3;
}

message FileCemetery {
    repeated FileTomb cemetery = 1;
}

message Patch {
    string userId = 1;
    string text = 2;
    int64 timestamp = 3;
    string actualHash = 4;
}

message GetVersionRequest {
    string projectId = 1;
    string fileId = 2;
    int64 version = 3;
}

message GetVersionResponse {
    FileVersion file = 1;
}

message CreateVersionRequest {
    string projectId = 1;
    string fileId = 2;
    bytes file = 3;
}

message CreateVersionResponse {
}


message CreatePatchRequest {
    string projectId = 1;
    string fileId = 2;
    Patch patch = 3;
}

message CreatePatchResponse {
}

message FileVersionListRequest {
    string projectId = 1;
    string fileId = 2;
}


message FileVersionListResponse {
    repeated FileVersionInfo versions = 1;
}

message CommitVersionRequest {
    string projectId = 1;
}

message CommitVersionResponse {
    repeated FileInfo badFiles = 1;
}

message FileVersion {
    repeated Patch patches = 1;
    bytes content = 2;
}

message DeletePatchRequest {
    string projectId = 1;
    string fileId = 2;
    int64 generation = 3;
    int64 patchTimestamp = 4;
}

message DeletePatchResponse {
    bytes content = 1;
}

message DeleteFileRequest {
    string projectId = 1;
    string fileId = 2;
    string fileName = 3;
    int64 removalTimestamp = 4;
}


message DeleteFileResponse {
}

message DeletedFileListRequest {
    string projectId = 1;
}

message DeletedFileListResponse {
    repeated FileTomb files = 1;
}

message ForcedFileCommitRequest {
    string projectId = 1;
    string fileId = 2;
    bytes actualContent = 3;
}

message ForcedFileCommitResponse {

}


service Cosmas {
    rpc GetVersion (GetVersionRequest) returns (GetVersionResponse) {
    }
    rpc CreateVersion (CreateVersionRequest) returns (CreateVersionResponse) {
    }
    rpc CreatePatch (CreatePatchRequest) returns (CreatePatchResponse) {
    }
    rpc FileVersionList (FileVersionListRequest) returns (FileVersionListResponse) {
    }
    rpc CommitVersion (CommitVersionRequest) returns (CommitVersionResponse) {
    }
    rpc DeletePatch (DeletePatchRequest) returns (DeletePatchResponse) {
    }
    rpc DeleteFile (DeleteFileRequest) returns (DeleteFileResponse) {
    }
    rpc DeletedFileList (DeletedFileListRequest) returns (DeletedFileListResponse) {
    }
    rpc ForcedFileCommit (ForcedFileCommitRequest) returns (ForcedFileCommitResponse) {
    }
}
